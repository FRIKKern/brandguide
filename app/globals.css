@import "tailwindcss";
@plugin "tailwindcss-animate";

/* Custom variants */
@custom-variant dark (&:is(.dark *));
@custom-variant group-in-view (.in-view &);

/* Theme values (your design tokens) */
@theme {
  /* Fonts */
  --font-general: var(--font-general);
  --font-title: var(--font-title);
  --font-supplement: var(--font-supplement);

  /* Breakpoints (from your screens) */
  --breakpoint-xs: 480px;
  --breakpoint-sm: 640px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1420px;

  /* Base colors (using your CSS variables) */
  --border: var(--border);
  --input: var(--input);
  --ring: var(--ring);
  --background: var(--background);
  --foreground: var(--foreground);
  --primary: var(--primary);
  --primary-foreground: var(--primary-foreground);
  --secondary: var(--secondary);
  --secondary-foreground: var(--secondary-foreground);
  --destructive: var(--destructive);
  --destructive-foreground: var(--destructive-foreground);
  --muted: var(--muted);
  --muted-foreground: var(--muted-foreground);
  --accent: var(--accent);
  --accent-foreground: var(--accent-foreground);
  --popover: var(--popover);
  --popover-foreground: var(--popover-foreground);
  --card: var(--card);
  --card-foreground: var(--card-foreground);

  /* Default radius */
  --radius: 0.5rem;
}

/* Output CSS variables for use in your utilities */
@theme inline {
  /* Colors */
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  /* Font families (mapping your extended font families) */
  --font-sans: var(--font-general);
  --font-heading: var(--font-title);
  --font-supplement: var(--font-supplement);

  /* Border radius */
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

/* Keyframes (from your extend.keyframes) */
@keyframes accordion-down {
  from { height: 0; }
  to { height: var(--radix-accordion-content-height); }
}

@keyframes accordion-up {
  from { height: var(--radix-accordion-content-height); }
  to { height: 0; }
}

@keyframes fade-up {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-down {
  0% {
    opacity: 0;
    transform: translateY(-80px);
    filter: blur(4px);
  }
  80% { opacity: 0.8; }
  100% {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0px);
  }
}

@keyframes fade-in {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fade-in-left-blur {
  0% { opacity: 0; transform: translateX(-20px); filter: blur(4px); }
  100% { opacity: 1; transform: translateX(0); filter: blur(0); }
}

@keyframes fade-in-right-blur {
  0% { opacity: 0; transform: translateX(20px); filter: blur(4px); }
  100% { opacity: 1; transform: translateX(0); filter: blur(0); }
}

@keyframes scale-in-bg {
  0% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

/* Define animation shortcuts */
@theme {
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-fade-up: fade-up 0.7s ease-out forwards;
  --animate-fade-in: fade-in 0.3s ease-out forwards;
  --animate-fade-down-slow: fade-down 2s ease forwards;
  --animate-scale-in-bg: scale-in-bg 2.2s ease forwards;
}

/* Container utility (replacing your container plugin) */
@utility container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
  @media (width >= var(--breakpoint-xs)) {
    max-width: 480px;
  }
  @media (width >= var(--breakpoint-sm)) {
    max-width: 640px;
    padding-left: 2rem;
    padding-right: 2rem;
  }
  @media (width >= var(--breakpoint-md)) {
    max-width: 768px;
  }
  @media (width >= var(--breakpoint-lg)) {
    max-width: 1024px;
  }
  @media (width >= var(--breakpoint-xl)) {
    max-width: 1220px;
    padding-left: 4rem;
    padding-right: 4rem;
  }
}




/* Base styles (mapping your custom headings) */
@layer base {
  h1 {
    font-family: var(--font-heading);
    font-size: 2.5rem;
    line-height: 1.2;
    font-weight: bold;
    @media (width >= var(--breakpoint-md)) {
      font-size: 3.5rem;
    }
  }
  h2 {
    font-family: var(--font-heading);
    font-size: 2rem;
    line-height: 1.2;
    font-weight: bold;
    @media (width >= var(--breakpoint-md)) {
      font-size: 2.5rem;
    }
  }
  h3 {
    font-family: var(--font-heading);
    font-size: 1.5rem;
    line-height: 1.2;
    @media (width >= var(--breakpoint-md)) {
      font-size: 2rem;
    }
  }
  h4 {
    font-family: var(--font-heading);
    font-size: 1.25rem;
    line-height: 1.3;
    @media (width >= var(--breakpoint-md)) {
      font-size: 1.5rem;
    }
  }
  h5 {
    font-family: var(--font-heading);
    font-size: 1.125rem;
    line-height: 1.4;
    @media (width >= var(--breakpoint-md)) {
      font-size: 1.25rem;
    }
  }
  h6 {
    font-family: var(--font-heading);
    font-size: 1rem;
    line-height: 1.4;
    @media (width >= var(--breakpoint-md)) {
      font-size: 1rem;
    }
  




    /* Optional utility classes for general and supplement fonts */
    .general {
      font-family: var(--font-general);
    }
    .supplement {
      font-family: var(--font-supplement);
    }
  }
  
  p {
    font-family: var(--font-general);
  }
  
  .scrollbar-hide {
    scrollbar-width: none; /* Firefox */
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  .mapboxgl-ctrl-logo {
    display: none !important;
  }
  
  .mapboxgl-ctrl-attrib-inner {
    display: none !important;
  }
  
  .mapboxgl-popup-close-button {
    display: none !important;
  }
  
  
  
  [g] {
    /* Ensure that the default transform uses the --default-x value */
    transform: translateX(var(--default-x));
  }
}



